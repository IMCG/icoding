//Adaptable Functions
#include<iostream>
#include<string>
#include<vector>
#include<iterator>
#include<algorithm>
#include<functional>
using namespace std;

template<typename Param1Type,typename Param2Type,typename ResultType>
class MyFunction:public binary_function<string,int,bool> {
public:
	bool operator()(const string& str)const
	{

	}
};

int main()
{
	vector<string> coll;
	coll.push_back("hello");
	coll.push_back("world");
	coll.push_back("how are you");
	coll.push_back("good bye");
	coll.push_back("ni hao");
	transform(coll.begin(),coll.end(),ostream_iterator<int>(cout," "),mem_fun_ref(&string::length));
	//mem_fun_ref....<functional>
}