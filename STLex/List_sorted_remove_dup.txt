#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node*next;
};
void Push(struct node**headRef,int elem)
{
	struct node*temp=(struct node*)malloc(sizeof(struct node));
	temp->data=elem;
	temp->next=*headRef;
	*headRef=temp;
}
void Print(struct node*headRef)
{
	while(headRef)
	{
		printf("%d ",headRef->data);
		headRef=headRef->next;
	}
	printf("\n");
}
int Lentth(struct node*headRef)
{
	struct node*current=headRef;
	int count=0;
	while(current!=NULL)
	{
		count++;
		current=current->next;
	}
	return count;
}
//Remove duplicates from a sorte list
void RemoveDuplicate(struct node*headRef)
{
	struct node*current=headRef;
	struct node*next;
	if(current==NULL)return;
	while(current->next!=NULL)
	{
		/*
		if(current->data==current->next->data)
		{
			struct node*nextnext=current->next->next;
			free(current->next);
			current->next=nextnext;
		}else{
			current=current->next;}*/
		next=current->next;
		if(current->data==next->data)
		{
			current->next=next->next;
		}else{
			current=current->next;
		}
	}
}
int main()
{
	int A[8]={9,8,8,7,5,5,5,2};
	struct node*head=NULL;
	for(int i=0;i<8;i++)
		Push(&head,A[i]);
	Print(head);
	RemoveDuplicate(head);
	Print(head);
}